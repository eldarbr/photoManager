[GENERIC]

# local temporary folder for storing photos before uploading to disk
temporaryFolder = ./temp

# delete photos after uploading
deleteTemp = true

# back up original photos
# will be uploaded to a private folder in Yandex.disk
backup =


[Y.DISK]

# OAuth credentials - access to Yadex API
# application id and password
# read about obtaining the key:
# https://yandex.com/dev/disk/api/concepts/quickstart.html
OAuthID =

# do not overwrite
# last obtained token and unix-time of expiration
OAuthToken =
expires_at =

# path to main folder in Yandex.disk
# read about folders at disk:
# https://yandex.com/dev/disk/api/reference/upload.html
mainFolder =


[RESIZER]

# list of lengths in pixels of the long sides of the resized photos
# and corresponding jpeg quality export property - int 0 to 100
# prefix - height (h) or width (w) or long side (m) restriction
# separators!
# between size, side, and quality - ":"
# between sizes - ","

# e.g. source photo resolution is 6000*4000
# the goal is a thumbnail with height 900px and a resized photo with long side 4096px
# thumbnail quality - 50, photo quality - 80
# so write down the following string:
# newSizes = h:900:50, m:4096:80

# NOTE
# if given size is larger than the original photo's size,
# the photo will be exported at its original size at given quality
newSizes =


[SECURITY]

# constant password for signature generator
password =
